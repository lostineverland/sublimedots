[
  { "keys": ["super+alt+r"], "command": "toggle_setting", "args": {"setting": "word_wrap"} },
  { "keys": ["super+alt+n"], "command": "run_existing_window_command", "args": {"file": "config/NodeJS/Main.sublime-menu", "id": "repl_node"} },
  { "keys": ["super+alt+m"], "command": "git_graph_all" },
  { "keys": ["super+alt+i"], "command": "python_virtualenv_repl" },
  // Side Panel
  { "keys": ["super+\\"], "command": "toggle_side_bar" },
  // Jump Along Index keymapping changes
  { "keys": ["alt+up"], "command": "jump_prev_indent" },
  { "keys": ["alt+shift+up"], "command": "jump_prev_indent", "args": { "extend_selection": true} },
  { "keys": ["alt+down"], "command": "jump_next_indent" },
  { "keys": ["alt+shift+down"], "command": "jump_next_indent", "args": { "extend_selection": true} },
  // Origami Pane switching
  { "keys": ["ctrl+super+alt+up"], "command": "travel_to_pane", "args": {"direction": "up"} },
  { "keys": ["ctrl+super+alt+right"], "command": "travel_to_pane", "args": {"direction": "right"} },
  { "keys": ["ctrl+super+alt+down"], "command": "travel_to_pane", "args": {"direction": "down"} },
  { "keys": ["ctrl+super+alt+left"], "command": "travel_to_pane", "args": {"direction": "left"} },
  // Origami Pane destroy
  { "keys": ["ctrl+super+alt+shift+up"], "command": "destroy_pane", "args": {"direction": "up"} },
  { "keys": ["ctrl+super+alt+shift+right"], "command": "destroy_pane", "args": {"direction": "right"} },
  { "keys": ["ctrl+super+alt+shift+down"], "command": "destroy_pane", "args": {"direction": "down"} },
  { "keys": ["ctrl+super+alt+shift+left"], "command": "destroy_pane", "args": {"direction": "left"} },
  // exit from inner context like parens or quotes
  { "keys": ["shift+space"], "command": "move", "args": {"by": "characters", "forward": true} },
  // evaluate clojure block
  { "keys": ["super+shift+b"], "command": "repl_transfer_current", "args": {"scope": "block"} },

  // Auto-pair backticks
  { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
    ]
  },
  { "keys": ["`"], "command": "wrap_block", "args": {"begin": "```", "end": "```"}, "context":
    [
      { "key": "indented_block", "match_all": true },
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
    ]
  },
  { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
      { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
    ]
  },
  // zoom and distraction free
  { "keys": ["super+k", "super+z"], "command": "zoom_pane", "args": {"fraction": 0.98} },
  { "keys": ["super+k", "super+k"], "command": "unzoom_pane" },
  { "keys": ["super+shift+\\"], "command": "toggle_tabs" },
  // Auto-pair single quotes
  //  Refactored to add a single-quote switch
  //  This block replaces the default file: Packages/Default/Default (OSX).sublime-keymap
  //  otherwise every auto-pair would need to be repeated here
  // { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0'"}, "context":
  //   [
  //     { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
  //     { "key": "setting.disable_auto_match_single_quote", "operator": "not_equal", "operand": true },
  //     { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
  //     { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
  //     { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
  //     { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true }
  //   ]
  // },
  // { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'${0:$SELECTION}'"}, "context":
  //   [
  //     { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
  //     { "key": "setting.disable_auto_match_single_quote", "operator": "not_equal", "operand": true },
  //     { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
  //   ]
  // },
  // { "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
  //   [
  //     { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
  //     { "key": "setting.disable_auto_match_single_quote", "operator": "not_equal", "operand": true },
  //     { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
  //     { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
  //     { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
  //     { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
  //   ]
  // },
  // { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
  //   [
  //     { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
  //     { "key": "setting.disable_auto_match_single_quote", "operator": "not_equal", "operand": true },
  //     { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
  //     { "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true },
  //     { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
  //     { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
  //     { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
  //   ]
  // },
  // Open a terminal view at current file directory
  {
      "keys": ["super+alt+t"], "command": "terminus_open", "args": {
          "config_name": "Default",
          "cwd": "${file_path:${folder}}"
      }
  },

]
